{"ast":null,"code":"import { ADD_TODO, GET_TODO, DELETE_TODO, TODO_LOADING } from '../actions/types';\nconst initialState = {\n  todos: [],\n  loading: false\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_TODO:\n      return { ...state,\n        todos: action.payload,\n        loading: false\n      };\n\n    case DELETE_TODO:\n      return { ...state,\n        todos: state.todos.filter(todo => todo._id != action.payload)\n      };\n\n    case ADD_TODO:\n      return { ...state,\n        todos: [action.payload, ...state.todos]\n      };\n\n    case TODO_LOADING:\n      return { ...state,\n        loading: true\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["G:/todo/client/src/reducers/todoReducer.js"],"names":["ADD_TODO","GET_TODO","DELETE_TODO","TODO_LOADING","initialState","todos","loading","state","action","type","payload","filter","todo","_id"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,QAAnB,EAA6BC,WAA7B,EAA0CC,YAA1C,QAA8D,kBAA9D;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAG,EADS;AAEjBC,EAAAA,OAAO,EAAG;AAFO,CAArB;AAKA,eAAe,UAASC,KAAK,GAAGH,YAAjB,EAA+BI,MAA/B,EAAsC;AACjD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKR,QAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHF,QAAAA,KAAK,EAAGG,MAAM,CAACE,OAFZ;AAGHJ,QAAAA,OAAO,EAAG;AAHP,OAAP;;AAKJ,SAAKJ,WAAL;AACI,aAAO,EACH,GAAGK,KADA;AAEHF,QAAAA,KAAK,EAAGE,KAAK,CAACF,KAAN,CAAYM,MAAZ,CAAmBC,IAAI,IAAIA,IAAI,CAACC,GAAL,IAAYL,MAAM,CAACE,OAA9C;AAFL,OAAP;;AAIJ,SAAKV,QAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHF,QAAAA,KAAK,EAAG,CAACG,MAAM,CAACE,OAAR,EAAiB,GAAGH,KAAK,CAACF,KAA1B;AAFL,OAAP;;AAIJ,SAAKF,YAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHD,QAAAA,OAAO,EAAG;AAFP,OAAP;;AAIJ;AACI,aAAOC,KAAP;AAvBR;AAyBH","sourcesContent":["import { ADD_TODO, GET_TODO, DELETE_TODO, TODO_LOADING } from '../actions/types'\n\nconst initialState = {\n    todos : [],\n    loading : false\n}\n\nexport default function(state = initialState, action){\n    switch(action.type){\n        case GET_TODO:\n            return {\n                ...state,\n                todos : action.payload,\n                loading : false\n            }\n        case DELETE_TODO:\n            return {\n                ...state,\n                todos : state.todos.filter(todo => todo._id != action.payload)\n            }\n        case ADD_TODO:\n            return {\n                ...state,\n                todos : [action.payload, ...state.todos]\n            }\n        case TODO_LOADING:\n            return {\n                ...state,\n                loading : true\n            }\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}